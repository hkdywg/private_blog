do_fork
========

linux中进程创建的函数有三个,分别为 ``fork`` ``vfork`` ``clone`` ,确切的说vfork创建出来的时轻量级进程,也叫线程,是共享资源的而进程

+------------------+-------------------------------------------------------------------------------------+
|  系统调用        |                           描述                                                      |
+==================+=====================================================================================+
|  fork            | fork创建的子进程是父进程的完整副本,复制了父进程的资源                               |
+------------------+-------------------------------------------------------------------------------------+
|  vfork           | vfork创建的与父进程共享数据段,而且vfork创建的子进程将优于父进程运行                 |
+------------------+-------------------------------------------------------------------------------------+
|  clone           | linux创建线程一般使用的是pthread库，实际上Linux也提供了创建线程的系统调用clone      |
+------------------+-------------------------------------------------------------------------------------+

fork、vfork、clone的系统调用的入口地址分别是sys_fork,sys_vfork和sys_clone，而他们的定义是依赖于体系结构的,因为在用户空间和内核空间之间
传递参数的方法因体系结构而异

.. note::

    系统调用的实现和C库不同，普通C函数通过将参数的值压入到进程的栈中进行参数的传递,由于系统调用是通过中断进程从用户态到内核的一种特殊的函数调用,
    没有用户态或者内核态的堆栈可以被用来在调用函数和被调函数之间进行参数传递.系统调用通过CPU寄存器来进行参数传递,在进行系统调用之前,内核将CPU寄存器
    的内容拷贝到内核堆栈中,实现参数的传递.不同的体系结构采用不同的方式或者不同寄存器来传递参数.

关于do_fork和_do_fork
----------------------



